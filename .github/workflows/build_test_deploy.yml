name: Actions

on:
  push:
  workflow_dispatch:

env:
  API-PROJECT-PATH: ./src/Host
  FUNCTIONS-PROJECT-PATH: ./src/Functions
  WORKER-PROJECT-PATH: ./src/Worker

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Publish API
        run: dotnet publish ${{env.API-PROJECT-PATH}} -c Release -o ${{env.DOTNET_ROOT}}/Alamb-clock-api

      - name: Upload API artifact for deployment job
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v2
        with:
          name: .api
          path: ${{env.DOTNET_ROOT}}/Alamb-clock-api

  deploy-api:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download API artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .api

      - name: Deploy to API Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'Alamb-clock-api'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BDE8C09DF462494682D8A5C60BF206CD }}
          package: .

  build-push-and-deploy-worker-image:
    # if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ${{ github.workspace }}
          file: ${{ env.WORKER-PROJECT-PATH }}/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY_USERNAME }}/worker:latest
          build-args: newrelicLicenseKey=${{ secrets.NEW_RELIC_LICENSE_KEY }}

      - name: Update running container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.WORKER_VM_HOSTNAME }}
          username: ${{ secrets.WORKER_VM_USERNAME }}
          key: ${{ secrets.WORKER_VM_SSH_KEY }}
          command_timeout: 5m
          script: -|
            sudo docker pull frasernicholson/worker:latest
            sudo docker stop alamb-clock-worker-prod
            sudo docker container rm alamb-clock-worker-prod
            sudo docker run -d --name alamb-clock-worker-prod --env-file ~/alamb-clock-worker/.env frasernicholson/worker:latest